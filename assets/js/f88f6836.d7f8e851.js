"use strict";(self.webpackChunksqliste_doc=self.webpackChunksqliste_doc||[]).push([[2297],{9868:(e,t,n)=>{n.d(t,{Zo:()=>l,kt:()=>k});var o=n(6687);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function a(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),p=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=p(e.components);return o.createElement(c.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,c=e.parentName,l=a(e,["components","mdxType","originalType","parentName"]),u=p(n),m=r,k=u["".concat(c,".").concat(m)]||u[m]||d[m]||i;return n?o.createElement(k,s(s({ref:t},l),{},{components:n})):o.createElement(k,s({ref:t},l))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=m;var a={};for(var c in t)hasOwnProperty.call(t,c)&&(a[c]=t[c]);a.originalType=e,a[u]="string"==typeof e?e:r,s[1]=a;for(var p=2;p<i;p++)s[p]=n[p];return o.createElement.apply(null,s)}return o.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1973:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>d,frontMatter:()=>i,metadata:()=>a,toc:()=>p});var o=n(8792),r=(n(6687),n(9868));const i={sidebar_position:1},s="Cookies",a={unversionedId:"intregrations/sql-server/http-operations/cookies",id:"intregrations/sql-server/http-operations/cookies",title:"Cookies",description:"A cookie is data stored in the browser, typically limited to 4KB, and it will be sent with each request.",source:"@site/docs/intregrations/sql-server/http-operations/cookies.md",sourceDirName:"intregrations/sql-server/http-operations",slug:"/intregrations/sql-server/http-operations/cookies",permalink:"/sqliste/docs/intregrations/sql-server/http-operations/cookies",draft:!1,editUrl:"https://github.com/corentin703/sqliste/tree/main/doc/docs/intregrations/sql-server/http-operations/cookies.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docSidebar",previous:{title:"HTTP operations",permalink:"/sqliste/docs/category/http-operations"},next:{title:"HTTP Headers",permalink:"/sqliste/docs/intregrations/sql-server/http-operations/headers"}},c={},p=[{value:"Reading",id:"reading",level:2},{value:"Writing",id:"writing",level:2}],l={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,o.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"cookies"},"Cookies"),(0,r.kt)("p",null,"A cookie is data stored in the browser, typically limited to 4KB, and it will be sent with each request.\nThey allow, for example, remembering user preferences or linking a user to their HTTP session."),(0,r.kt)("h2",{id:"reading"},"Reading"),(0,r.kt)("p",null,"Cookies can be read from a key-value dictionary available in the standard parameter request_cookies.\nThe key corresponds to the name of your cookie, and the value corresponds to the data contained within it."),(0,r.kt)("p",null,"Here's an example of reading a cookie that counts the number of user requests."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},'#Route("/api/example/cookie")\n#HttpGet("ExampleCookie")\nCREATE OR ALTER PROCEDURE [web].[p_example_cookie]\n    @request_cookies NVARCHAR(MAX) \nAS \nBEGIN\n    DECLARE @visit_counter BIGINT;\n    \n    -- Retrieve the value of the "visitCounter" cookie\n    SET @visit_counter = ISNULL(JSON_VALUE(@request_cookies, \'$.visitCounter\'), 0) + 1;\n\n    IF (@visit_counter = 1)\n    BEGIN\n        SELECT \n             \'{ "message": "This is your first visit. Welcome!" }\' AS [response_body]\n            ,200 AS [response_status]\n        ;\n        RETURN;\n    END \n\n    SELECT \n         \'{ "message": "This is your visit number \' + CAST(@visit_counter AS NVARCHAR(MAX)) + \'!" }\' AS [response_body]\n        ,200 AS [response_status]\n    ;\nEND\nGO\n')),(0,r.kt)("h2",{id:"writing"},"Writing"),(0,r.kt)("p",null,"To write or modify a cookie, you need to modify the response_cookies parameter.\nUnlike reading, it's not a dictionary but an array of parameters that allows you to define multiple properties for cookies."),(0,r.kt)("p",null,"Description of a cookie configuration:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json",metastring:"lines",lines:!0},'{\n  "name": "name",\n  "value": "value",\n  "expires": "2023-06-12T00:00:00", // Expiration date in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format\n  "domain": "Domain of validity", // By default, the domain corresponds to the origin. You can set your root domain to include all your subdomains. If you specify another domain, keep in mind that cross-origin cookies are being phased out.\n  "path": "/api/example", // The cookie will only be sent if the route starts with /api/example\n  "secure": true, // The cookie will only be sent when the connection is HTTPS\n  "sameSite": "Lax", // Defines the cookie sending policy for requests to other sites\n  "httpOnly": false, // Makes the cookie inaccessible via JavaScript\n  "maxAge": 3600 // Maximum lifetime of the cookie (in seconds), complementary to the `expires` parameter, which takes a date\n}\n')),(0,r.kt)("p",null,"To learn more about cookies and the possibilities of these parameters, you can refer to this ",(0,r.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies"},"resource"),"  that details the purpose of each parameter. The mandatory parameters in this template are ",(0,r.kt)("inlineCode",{parentName:"p"},"name")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"value"),", along with either ",(0,r.kt)("inlineCode",{parentName:"p"},"expires")," or ",(0,r.kt)("inlineCode",{parentName:"p"},"maxAge")," (you can choose one)."),(0,r.kt)("p",null,"Let's continue with our previous example by adding the necessary code to set or update the cookie if it doesn't exist."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-sql"},"#Route(\"/api/example/cookie\")\n#HttpGet(\"ExampleCookie\")\nCREATE OR ALTER PROCEDURE [web].[p_example_cookie]\n    @request_cookies NVARCHAR(MAX),\n    @response_cookies NVARCHAR(MAX)\nAS \nBEGIN\n    DECLARE @visit_counter BIGINT;\n    DECLARE @visit_counter_cookie NVARCHAR(MAX);\n    \n    -- Retrieve the current value\n    SET @visit_counter = ISNULL(JSON_VALUE(@request_cookies, '$.visitCounter'), 0) + 1;\n\n    -- Set up our cookie\n    SET @visit_counter_cookie = (\n        SELECT \n            'visitCounter' AS [name],\n            3600 * 24 * 7 AS [maxAge],\n            @visit_counter AS [value]\n        FOR JSON PATH\n    );\n    \n    -- Since FOR JSON PATH always returns an array, we retrieve the first element (the only one here)\n    SET @visit_counter_cookie = JSON_QUERY(@visit_counter_cookie, '$[0]');\n\n    -- Add it to the list of cookies we want to modify\n    SET @response_cookies = JSON_MODIFY(@response_cookies, 'append $', @visit_counter_cookie); \n\n    IF (@visit_counter = 1)\n    BEGIN\n        SELECT \n             '{ \"message\": \"This is your first visit. Welcome!\" }' AS [response_body]\n            ,200 AS [response_status]\n            ,@response_cookies AS [response_cookies]\n        ;\n        RETURN;\n    END \n\n    SELECT \n         '{ \"message\": \"This is your visit number ' + CAST(@visit_counter AS NVARCHAR(MAX)) + '!\" }' AS [response_body]\n        ,200 AS [response_status]\n        ,@response_cookies AS [response_cookies]\n    ;\nEND\nGO\n")))}d.isMDXComponent=!0}}]);