"use strict";(self.webpackChunksqliste_doc=self.webpackChunksqliste_doc||[]).push([[3365],{9868:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(6687);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function s(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?s(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):s(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},s=Object.keys(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(n=0;n<s.length;n++)r=s[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),u=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},p=function(e){var t=u(e.components);return n.createElement(l.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,s=e.originalType,l=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),c=u(r),m=a,f=c["".concat(l,".").concat(m)]||c[m]||d[m]||s;return r?n.createElement(f,o(o({ref:t},p),{},{components:r})):n.createElement(f,o({ref:t},p))}));function f(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=r.length,o=new Array(s);o[0]=m;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i[c]="string"==typeof e?e:a,o[1]=i;for(var u=2;u<s;u++)o[u]=r[u];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},854:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>u});var n=r(8792),a=(r(6687),r(9868));const s={sidebar_position:2},o="Concepts",i={unversionedId:"concepts",id:"concepts",title:"Concepts",description:"Dans SQListe, l'id\xe9e principale est de permettre \xe0 un d\xe9veloppeur SQL de d\xe9finir un",source:"@site/docs/concepts.md",sourceDirName:".",slug:"/concepts",permalink:"/sqliste/docs/concepts",draft:!1,editUrl:"https://github.com/corentin703/sqliste/tree/doc/docs/concepts.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"docSidebar",previous:{title:"Introduction",permalink:"/sqliste/docs/intro"},next:{title:"D\xe9marrage",permalink:"/sqliste/docs/category/d\xe9marrage"}},l={},u=[{value:"Entr\xe9e / sortie des proc\xe9dures",id:"entr\xe9e--sortie-des-proc\xe9dures",level:2},{value:"Pipeline de proc\xe9dures",id:"pipeline-de-proc\xe9dures",level:2},{value:"Contr\xf4leurs",id:"contr\xf4leurs",level:2},{value:"Intergiciels",id:"intergiciels",level:2},{value:"Annotations",id:"annotations",level:2}],p={toc:u},c="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(c,(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"concepts"},"Concepts"),(0,a.kt)("p",null,"Dans SQListe, l'id\xe9e principale est de permettre \xe0 un d\xe9veloppeur SQL de d\xe9finir un\nservice web propuls\xe9 par le SGBD \xe0 travers des proc\xe9dures stock\xe9es."),(0,a.kt)("h2",{id:"entr\xe9e--sortie-des-proc\xe9dures"},"Entr\xe9e / sortie des proc\xe9dures"),(0,a.kt)("p",null,"Une proc\xe9dure SQListe prend une liste de param\xe8tres standard d\xe9finie (tous facultatifs).\nElle retourne ensuite ces param\xe8tres, via un ",(0,a.kt)("em",{parentName:"p"},"SELECT")," avec le m\xeame nom."),(0,a.kt)("p",null,"Dans le cas d'un ",(0,a.kt)("em",{parentName:"p"},"pipeline"),", les param\xe8tres r\xe9cup\xe9r\xe9s \xe0 la sortie d'une \xe9tape ",(0,a.kt)("em",{parentName:"p"},"x")," deviendront les param\xe8tres de l'\xe9tape ",(0,a.kt)("em",{parentName:"p"},"x+1"),".\nSi une proc\xe9dure ne retourne pas un param\xe8tre ayant \xe9t\xe9 inject\xe9, sa valeur restera inchang\xe9e lorsqu'il sera pass\xe9 \xe0 la proc\xe9dure suivante."),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"Ceci n'est valable que pour les param\xe8tres standards.",(0,a.kt)("br",null),"\nLes param\xe8tres personnalis\xe9s tels que ceux issus de la route ne sont pas concern\xe9s.")),(0,a.kt)("h2",{id:"pipeline-de-proc\xe9dures"},"Pipeline de proc\xe9dures"),(0,a.kt)("p",null,"Un ",(0,a.kt)("em",{parentName:"p"},"pipeline")," est un encha\xeenement d'\xe9tapes s'ex\xe9cutant dans un ordre d\xe9fini\nafin d'arriver \xe0 un \xe9tat final."),(0,a.kt)("p",null,"Dans notre cas, cela va correspondre \xe0 l'ex\xe9cution de proc\xe9dures allant jouer le r\xf4le d'intergiciels ",(0,a.kt)("strong",{parentName:"p"},"avant"),"\nla proc\xe9dure ex\xe9cutant r\xe9ellement l'objet de la requ\xeate, ainsi qu'apr\xe8s."),(0,a.kt)("p",null,"Cela se r\xe9sume par le sch\xe9ma suivant :"),(0,a.kt)("mermaid",{value:"flowchart TD\n    request[Requ\xeate] --\x3e before-middleware1\n    \n    subgraph before-midleware[Pr\xe9-intergiciel]\n        before-middleware1[/Journalisation/] --\x3e before-middleware2[/Authentification/]\n    end\n    \n    before-middleware2 --\x3e controller[/Contr\xf4leur/]\n    controller --\x3e post-middleware1\n\n    subgraph after-midleware[Post-intergiciel]\n        post-middleware1[/Gestion d'erreurs/]\n    end\n\n    post-middleware1 --\x3e response[R\xe9ponse]"}),(0,a.kt)("p",null,"Deux types de proc\xe9dure ressortent de ce sch\xe9ma : les contr\xf4leurs et les intergiciels."),(0,a.kt)("h2",{id:"contr\xf4leurs"},"Contr\xf4leurs"),(0,a.kt)("p",null,"Dans notre cas, un contr\xf4leur est un composant charg\xe9 d'orchestrer la logique m\xe9tier n\xe9cessaire \xe0 transformer une requ\xeate HTTP en r\xe9ponse HTTP."),(0,a.kt)("h2",{id:"intergiciels"},"Intergiciels"),(0,a.kt)("p",null,"Un intergiciel est un composant permettant de mutualiser une logique commune \xe0 plusieurs autres composants plus sp\xe9cifiques.",(0,a.kt)("br",null),"\nAu sein de SQListe, ceux-ci peuvent \xeatre ex\xe9cut\xe9s avant (pr\xe9-intergiciel) ou apr\xe8s (post-intergiciel) un contr\xf4leur."),(0,a.kt)("p",null,"Quelques exemples d'utilisation :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"V\xe9rifier que l'utilisateur est authentifi\xe9, qu'il a le droit d'acc\xe9der \xe0 certaines ressources, et renvoyer une erreur avec un statut 401 ou 403 selon le cas ;"),(0,a.kt)("li",{parentName:"ul"},"Journaliser une requ\xeate ;"),(0,a.kt)("li",{parentName:"ul"},"Attraper les erreurs non g\xe9r\xe9es, et formatter la r\xe9ponse HTTP en cons\xe9quence.")),(0,a.kt)("h2",{id:"annotations"},"Annotations"),(0,a.kt)("p",null,"Les annotations prennent la forme d'un mot cl\xe9 pr\xe9c\xe9d\xe9 d'un ",(0,a.kt)("em",{parentName:"p"},"#")," mis en commentaires au-dessus d'une proc\xe9dure, avec d'\xe9ventuels arguments.",(0,a.kt)("br",null),"\nElles servent \xe0 param\xe9trer le traitement que SQListe va appliquer \xe0 une proc\xe9dure. "),(0,a.kt)("p",null,"Exemple : "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sql"},"-- L'\xe9criture d'annotations n'emp\xeache pas la pr\xe9sence de commentaires ;)\n-- #Route(\"/api/helloWorld\")\n-- #HttpGet\nCREATE OR ALTER PROCEDURE [web].[p_proc]...\n")),(0,a.kt)("p",null,"Le passage d'arguments aux annotations peut se faire de deux mani\xe8res :"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"de mani\xe8re ordonn\xe9e : #Annotation(\"1\", false, 3) o\xf9 l'ordre des param\xe8tres est important et o\xf9 aucun d'entre eux ne peut \xeatre omis."),(0,a.kt)("li",{parentName:"ul"},'de mani\xe8re nomm\xe9e : #Annotation(Param2 = 2, Param1 = "1") o\xf9 l\'ordre des param\xe8tres est libre, et o\xf9 les param\xe8tres ayant une valeur par d\xe9faut peuvent-\xeatre omis.')),(0,a.kt)("admonition",{type:"info"},(0,a.kt)("p",{parentName:"admonition"},"Le passage de param\xe8tres en mode ordonn\xe9 est recommand\xe9 si l'annotation ne prend pas beaucoup de param\xe8tres.",(0,a.kt)("br",null),"\nEn revanche si elle en prend plus de deux, il vaut mieux passer les param\xe8tres en mode nomm\xe9.")),(0,a.kt)("admonition",{type:"tip"},(0,a.kt)("p",{parentName:"admonition"},"Les annotations \xe9tant trait\xe9es s\xe9par\xe9ment leur ordre n'a aucune importance.")))}d.isMDXComponent=!0}}]);