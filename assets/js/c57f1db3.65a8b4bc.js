"use strict";(self.webpackChunksqliste_doc=self.webpackChunksqliste_doc||[]).push([[3357],{9868:(e,r,n)=>{n.d(r,{Zo:()=>c,kt:()=>g});var t=n(6687);function s(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function o(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){s(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function i(e,r){if(null==e)return{};var n,t,s=function(e,r){if(null==e)return{};var n,t,s={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(s[n]=e[n]);return s}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var l=t.createContext({}),p=function(e){var r=t.useContext(l),n=r;return e&&(n="function"==typeof e?e(r):o(o({},r),e)),n},c=function(e){var r=p(e.components);return t.createElement(l.Provider,{value:r},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},m=t.forwardRef((function(e,r){var n=e.components,s=e.mdxType,a=e.originalType,l=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),u=p(n),m=s,g=u["".concat(l,".").concat(m)]||u[m]||d[m]||a;return n?t.createElement(g,o(o({ref:r},c),{},{components:n})):t.createElement(g,o({ref:r},c))}));function g(e,r){var n=arguments,s=r&&r.mdxType;if("string"==typeof e||s){var a=n.length,o=new Array(a);o[0]=m;var i={};for(var l in r)hasOwnProperty.call(r,l)&&(i[l]=r[l]);i.originalType=e,i[u]="string"==typeof e?e:s,o[1]=i;for(var p=2;p<a;p++)o[p]=n[p];return t.createElement.apply(null,o)}return t.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5513:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>p});var t=n(8792),s=(n(6687),n(9868));const a={sidebar_position:7},o="Error Handling",i={unversionedId:"intregrations/sql-server/error-handling",id:"intregrations/sql-server/error-handling",title:"Error Handling",description:"When an error occurs in a procedure during the pipeline, it interrupts the pipeline and returns a 500 (INTERNAL SERVER ERROR) error.",source:"@site/docs/intregrations/sql-server/error-handling.md",sourceDirName:"intregrations/sql-server",slug:"/intregrations/sql-server/error-handling",permalink:"/sqliste/docs/intregrations/sql-server/error-handling",draft:!1,editUrl:"https://github.com/corentin703/sqliste/tree/main/doc/docs/intregrations/sql-server/error-handling.md",tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7},sidebar:"docSidebar",previous:{title:"HTTP Headers",permalink:"/sqliste/docs/intregrations/sql-server/http-operations/headers"},next:{title:"OpenAPI",permalink:"/sqliste/docs/intregrations/sql-server/openapi"}},l={},p=[],c={toc:p},u="wrapper";function d(e){let{components:r,...n}=e;return(0,s.kt)(u,(0,t.Z)({},c,n,{components:r,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"error-handling"},"Error Handling"),(0,s.kt)("p",null,"When an error occurs in a procedure during the pipeline, it interrupts the pipeline and returns a 500 (",(0,s.kt)("em",{parentName:"p"},"INTERNAL SERVER ERROR"),") error."),(0,s.kt)("p",null,"To enable error handling, you can take the ",(0,s.kt)("em",{parentName:"p"},"error")," standard parameter in the procedures of the pipeline.\nWhen an error occurs, SQListe will look at the list of arguments in the procedures of the pipeline that have not been executed yet. If such an argument exists, it will take the first one and execute it.",(0,s.kt)("br",null)),(0,s.kt)("p",null,"If this procedure doesn't raise an error itself, it will be considered as handled."),(0,s.kt)("p",null,"The ",(0,s.kt)("em",{parentName:"p"},"error")," argument is a JSON object following the format below:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json",metastring:"lines",lines:!0},'{\n  "message": "Message de l\'erreur", // Cela peut contenir une chaine tout \xe0 fait arbitraire *\n  "attributes": {\n    "state": 1 // \xc9tat de l\'erreur remont\xe9 par SQL Server\n  }\n}\n')),(0,s.kt)("p",null,"This mechanism allows you to intercept an error and modify the response accordingly."),(0,s.kt)("admonition",{type:"info"},(0,s.kt)("p",{parentName:"admonition"},"When multiple procedures in the pipeline raise errors, the mechanism is executed each time.")),(0,s.kt)("admonition",{type:"note"},(0,s.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"About the ",(0,s.kt)("em",{parentName:"mdxAdmonitionTitle"},"message")," field of the ",(0,s.kt)("em",{parentName:"mdxAdmonitionTitle"},"error")," argument *"),(0,s.kt)("p",{parentName:"admonition"},"It is possible to pass a structured string (such as JSON) as a message in a RAISERROR statement.\nYou can retrieve it here and process the response accordingly.")),(0,s.kt)("p",null,"Practical example: a post-middleware catching all errors:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-sql"},"-- #Middleware(Order = 1000, After = true)\nCREATE OR ALTER PROCEDURE [web].[p_middleware_catch_error]\n    @request_body NVARCHAR(MAX) = NULL,\n    @request_headers NVARCHAR(MAX) = NULL,\n    @request_cookies NVARCHAR(MAX) = NULL,\n    @request_path NVARCHAR(MAX) = NULL,\n    @pipeline_storage NVARCHAR(MAX),\n    @error NVARCHAR(MAX) = NULL\nAS\nBEGIN\n    IF (@error IS NULL)\n    BEGIN\n        RETURN;\n    END\n\n    -- Retrieve the \"message\" property from the error JSON\n    SET @error_message = JSON_VALUE(@error, '$.message');\n\n    -- If it's not a JSON, we don't handle it (SQListe will return an HTTP 500)\n    IF (ISJSON(@error_message) = 0)\n    BEGIN\n        RAISERROR(@error_message, 18, 1);\n        RETURN;\n    END\n    \n    DECLARE @error_message NVARCHAR(MAX);\n    DECLARE @response_body NVARCHAR(MAX);\n    DECLARE @response_headers NVARCHAR(MAX) = N'{ \"Content-Type\": \"application/json\" }';\n\n    -- Parse the JSON and perform our processing\n    DECLARE\n        @message NVARCHAR(MAX),\n        @status INT\n    ;\n\n    SELECT\n        @message = [error_message],\n        @status = [http_status]\n    FROM OPENJSON(@error_message)\n    WITH (\n        [error_message] NVARCHAR(MAX),\n        [http_status] INT\n    );\n\n    SET @response_body = (\n        SELECT\n            @message AS [message],\n            @status AS [status]\n        FOR JSON PATH\n    );\n\n    SELECT\n         JSON_QUERY(@response_body, '$[0]') AS [response_body]\n        ,@status AS [response_status]\n        ,@response_headers AS [response_headers]\n        ,0 AS [next]\n    ;\nEND\nGO\n")),(0,s.kt)("p",null,"In this example, the message passed to RAISERROR is a JSON object on which we perform processing to alter the response appropriately."))}d.isMDXComponent=!0}}]);